{"version":3,"sources":["useForm.js","validatesInfo.js","FormSignUp.js","FormSuccess.js","Form.js","App.js","index.js"],"names":["useForm","callback","validate","useState","username","email","password","password2","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","e","target","name","value","handleSubmit","preventDefault","validateInfo","trim","test","FormSignUp","submitForm","className","onSubmit","htmlFor","id","type","placeholder","onChange","href","FormSuccess","Form","isSubmitted","setIsSubmitted","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdf80059.chunk.js","sourcesContent":["import{useState,useEffect} from \"react\";\r\n\r\nconst useForm = (callback,validate) => {\r\n    const [values,setValues] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        password:\"\",\r\n        password2: \"\"\r\n    });\r\n\r\n    const [errors,setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n    const handleChange = e => {\r\n        const {name,value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //display errors info \r\n        setErrors(validate(values));\r\n        setIsSubmitting(true);\r\n    }\r\n\r\n    //useEffect will allow to display errors if any. \r\n    //useEffect will also allow form to submit if no errors\r\n    useEffect(() =>{\r\n        if(Object.keys(errors).length === 0 && isSubmitting){\r\n            callback();\r\n        }\r\n    });\r\n\r\n    return {handleChange, values, handleSubmit, errors};\r\n\r\n}\r\n\r\nexport default useForm;","//logic to check validation for forms\r\n\r\nexport default function validateInfo(values){\r\n    let errors ={}\r\n\r\n    //Username: if no username, then show msg in code block\r\n    if((!values.username.trim())){\r\n        errors.username = \"Username required\"\r\n    }\r\n\r\n    //Email: checking if email is entered and if email is in correct email format \r\n    // if no email entered\r\n    if(!values.email){\r\n        errors.email = \"Email required\"\r\n    }\r\n    // if invalid format for email\r\n    else if(!/\\S+@\\S+\\.\\S+/.test(values.email)){\r\n        errors.email = \"Email address is invalid\"\r\n    }\r\n\r\n    //Password: check if password is entered and if password has correct characters \r\n    //if no password entered \r\n    if(!values.password){\r\n        errors.password= \"Password required\"\r\n    }\r\n    // if invalid number of characters for password\r\n    else if(values.password.length < 6){\r\n        errors.password = \"Password requries 6 characters or more\"\r\n    }\r\n\r\n    //Confirm password \r\n    //if no values entered for confirming password \r\n    if(!values.password2){\r\n        errors.password2 = \"Password is required\"\r\n    }else if (values.password2 !== values.password){\r\n        errors.password2 = \"Passwords do not match\"\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n","import React from \"react\";\r\nimport useForm from \"./useForm\";\r\nimport validate from \"./validatesInfo\";\r\nimport \"./Form.css\";\r\n\r\nconst FormSignUp = ({submitForm}) => {\r\n    const {handleChange, values, handleSubmit, errors} = useForm(submitForm,validate);\r\n\r\n    return(\r\n        // sign up form here \r\n        <div className= \".form-content-right\">\r\n            <form className = \"form\" onSubmit={handleSubmit}>\r\n                <h1>Get started with us today!</h1>\r\n                <hr></hr>\r\n                <br></br>\r\n                <div className= \"form-inputs\">\r\n                    <label htmlFor=\"username\"\r\n                        className=\"form-label\"\r\n                        id=\"usernameID\">\r\n                        Username\r\n                    </label>\r\n                    <input \r\n                        id= \"username\"\r\n                        type=\"text\"\r\n                        name =\"username\"\r\n                        className=\"form-input\"\r\n                        placeholder= \"Enter your username\"\r\n                        value = {values.username}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.username && <p>{errors.username}</p>}\r\n                </div>\r\n                <div className= \"form-inputs\">\r\n                    <label htmlFor=\"email\"\r\n                        className=\"form-label\">\r\n                        Email\r\n                    </label>\r\n                    <input  \r\n                        id = \"email\"\r\n                        type=\"text\"\r\n                        name =\"email\"\r\n                        className=\"form-input\"\r\n                        placeholder= \"Enter your email\"\r\n                        value = {values.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                     {errors.email && <p>{errors.email}</p>}\r\n                </div>\r\n                <div className= \"form-inputs\">\r\n                    <label htmlFor=\"password\"\r\n                        className=\"form-label\">\r\n                        Password\r\n                    </label>\r\n                    <input  \r\n                        id = \"password\"\r\n                        type=\"password\"\r\n                        name =\"password\"\r\n                        className=\"form-input\"\r\n                        placeholder= \"Enter your password\"\r\n                        value = {values.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.password && <p>{errors.password}</p>}\r\n                </div>\r\n                <div className= \"form-inputs\">\r\n                    <label htmlFor=\"password2\"\r\n                        className=\"form-label\">\r\n                        Confirm Password\r\n                    </label>\r\n                    <input  \r\n                        id = \"password2\"\r\n                        type=\"password\"\r\n                        name =\"password2\"\r\n                        className=\"form-input\"\r\n                        placeholder= \"Enter your password again\"\r\n                        value = {values.password2}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.password2 && <p>{errors.password2}</p>}\r\n                </div>\r\n                <br></br>\r\n                <button className=\"form-input-btn\"\r\n                    type= \"button-submit\">Sign me up!\r\n                </button>\r\n                <p className=\"form-input-login\">\r\n                    Already have an Account? Login <a href=\"#\">here</a>\r\n                </p>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FormSignUp;","//this is for when form is sucessfully submited\r\n\r\nimport React from \"react\";\r\n\r\nconst FormSuccess =() => {\r\n    return(\r\n        <div className =\"form-content-right\">\r\n            <div className = \"form-success\">Success! We have received your request.</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSuccess;","import React,{useState} from \"react\";\r\nimport FormSignUp from \"./FormSignUp\";\r\nimport FormSuccess from \"./FormSuccess\";\r\n\r\nconst Form = () => {\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    function submitForm(){\r\n        setIsSubmitted(true);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {!isSubmitted ? \r\n            <FormSignUp submitForm={submitForm} /> : <FormSuccess />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import './App.css';\nimport Form from \"./Form\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Form />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}